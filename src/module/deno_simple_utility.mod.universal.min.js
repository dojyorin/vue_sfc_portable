function l(e){return btoa([...e].map(r=>String.fromCharCode(r)).join(""))}function b(e){return new Uint8Array([...atob(e)].map(r=>r.charCodeAt(0)))}export{l as base64Encode};export{b as base64Decode};async function i({publicKey:e,privateKey:r}){return await crypto.subtle.deriveKey({name:"ECDH",public:await crypto.subtle.importKey("spki",e,{name:"ECDH",namedCurve:"P-521"},!1,[])},await crypto.subtle.importKey("pkcs8",r,{name:"ECDH",namedCurve:"P-521"},!1,["deriveKey","deriveBits"]),{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}function g(){return crypto.randomUUID()}function u(e){return crypto.getRandomValues(new Uint8Array(e))}async function h(e,r){return new Uint8Array(await crypto.subtle.digest(`SHA-${e}`,r))}async function x(e){const{publicKey:r,privateKey:t}=await crypto.subtle.generateKey({name:e,namedCurve:"P-521"},!0,e==="ECDH"?["deriveKey","deriveBits"]:["sign","verify"]);return{publicKey:new Uint8Array(await crypto.subtle.exportKey("spki",r)),privateKey:new Uint8Array(await crypto.subtle.exportKey("pkcs8",t))}}async function D({publicKey:e,privateKey:r},t){const a=u(12),o=await crypto.subtle.encrypt({name:"AES-GCM",tagLength:128,iv:a},await i({publicKey:e,privateKey:r}),t),c=new Uint8Array(a.byteLength+o.byteLength);return c.set(a,0),c.set(new Uint8Array(o),a.byteLength),c}async function E({publicKey:e,privateKey:r},t){const a=t.subarray(0,12),o=await crypto.subtle.decrypt({name:"AES-GCM",tagLength:128,iv:a},await i({publicKey:e,privateKey:r}),t.subarray(a.byteLength));return new Uint8Array(o)}async function k(e,r){const t=await crypto.subtle.sign({name:"ECDSA",hash:"SHA-512"},await crypto.subtle.importKey("pkcs8",e,{name:"ECDSA",namedCurve:"P-521"},!1,["sign"]),r);return new Uint8Array(t)}async function A(e,r,t){return await crypto.subtle.verify({name:"ECDSA",hash:"SHA-512"},await crypto.subtle.importKey("spki",e,{name:"ECDSA",namedCurve:"P-521"},!1,["verify"]),r,t)}export{g as randomUuid};export{u as randomBin};export{h as hashValue};export{x as pubkeyGen};export{D as pubkeyEncrypt};export{E as pubkeyDecrypt};export{k as pubkeySign};export{A as pubkeyVerify};async function y(e,r){return new Uint8Array(await new Response(new Blob([e]).stream().pipeThrough(r)).arrayBuffer())}async function U(e){return await y(e,new CompressionStream("deflate-raw"))}async function S(e){return await y(e,new DecompressionStream("deflate-raw"))}export{U as deflateEncode};export{S as deflateDecode};async function C(e,r,t){const{origin:a,pathname:o}=/^http(s|):\/\//i.test(e)?new URL(e):new URL(e,location.href),c=new URLSearchParams(t?.query).toString(),n=await fetch(`${a}${o}${c&&"?"}${c}`,{method:t?.method??"GET",credentials:t?.credentials??"omit",mode:t?.mode??"cors",cache:t?.cache??"no-cache",redirect:t?.redirect??"follow",keepalive:t?.keepalive??!1,referrerPolicy:t?.referrerPolicy??"no-referrer",referrer:t?.referrer??"",integrity:t?.integrity??"",signal:t?.signal??null,headers:t?.headers??{},body:t?.body??null,window:null});switch(r){case"text":return await n.text();case"json":return await n.json();case"form":return await n.formData();case"byte":return new Uint8Array(await n.arrayBuffer());case"buffer":return await n.arrayBuffer();case"blob":return await n.blob();case"ok":return n.ok;case"code":return n.status;case"header":return n.headers;case"response":return n;default:throw new Error}}export{C as fetchExtend};function s(e){return new TextEncoder().encode(e)}function p(e){return new TextDecoder().decode(e)}function v(e){return[...e].map(r=>r.toString(16).toUpperCase().padStart(2,"0")).join("")}function L(e){return new Uint8Array(e.match(/[0-9a-fA-F]{2}/g)?.map(r=>parseInt(r,16))??[])}function K(e){return e.trim().replace(/\r/g,"").replace(/ +/g," ").replace(/\t+/g,"	").replace(/\n+/g,`
`).replace(/^ /mg,"").replace(/ $/mg,"")}function P(e){return[...new Intl.Segmenter().segment(e)].map(({segment:r})=>r)}export{s as utfEncode};export{p as utfDecode};export{v as hexEncode};export{L as hexDecode};export{K as trimExtend};export{P as accurateSegment};const d=1,f=4;function B(e){const r=new Uint8Array(e.reduce((a,[o,c])=>a+1+4+s(o).byteLength+c.byteLength,0));let t=0;for(const[a,o]of e){const c=s(a),n=o;new DataView(r.buffer,t).setUint8(0,c.byteLength),t+=d,new DataView(r.buffer,t).setUint32(0,n.byteLength),t+=f,r.set(c,t),t+=c.byteLength,r.set(n,t),t+=n.byteLength}return r}function V(e){const r=[];for(let t=0;t<e.byteLength;!1){const a=new DataView(e.buffer,t).getUint8(0);t+=d;const o=new DataView(e.buffer,t).getUint32(0);t+=f;const c=p(e.subarray(t,t+=a)),n=e.subarray(t,t+=o);r.push([c,n])}return r}export{B as minipackEncode};export{V as minipackDecode};function m(e){return Math.floor((e??new Date).getTime()/1e3)}function H(e){return new Date(e*1e3)}function G(e){const[r,t,a,o,c,n]=e.split(/[/ :TZ_.-]/i).map(w=>Number(w));return m(new Date(r,(t??1)-1,a??1,o??0,c??0,n??0))}export{m as unixtimeEncode};export{H as unixtimeDecode};export{G as unixtimeParse};