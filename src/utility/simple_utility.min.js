// [Build] https://deno.land/x/simple_utility@v0.0.12/mod.compatible.ts
function E(e){return btoa([...e].map(r=>String.fromCharCode(r)).join(""))}function D(e){return new Uint8Array([...atob(e)].map(r=>r.charCodeAt(0)))}export{E as base64Encode};export{D as base64Decode};const i="P-384",d="SHA-384";async function f(e){const r={name:"ECDH",namedCurve:i},t={name:"AES-GCM",length:32*8},n=await crypto.subtle.importKey("spki",e.publicKey,r,!1,[]),a=await crypto.subtle.importKey("pkcs8",e.privateKey,r,!1,["deriveKey","deriveBits"]),s={name:"ECDH",public:n};return await crypto.subtle.deriveKey(s,a,t,!1,["encrypt","decrypt"])}async function w(e){return await new Promise(r=>r(crypto.getRandomValues(new Uint8Array(e))))}async function y(e,r){const t=e?"SHA-512":"SHA-256";return new Uint8Array(await crypto.subtle.digest(t,r))}async function K(e){const r=e?["deriveKey","deriveBits"]:["sign","verify"],t={name:e?"ECDH":"ECDSA",namedCurve:i},{publicKey:n,privateKey:a}=await crypto.subtle.generateKey(t,!0,r);return{publicKey:new Uint8Array(await crypto.subtle.exportKey("spki",n)),privateKey:new Uint8Array(await crypto.subtle.exportKey("pkcs8",a))}}async function A(e,r){const t={name:"AES-GCM",tagLength:128,iv:await w(12)},n=await f(e),a=new Uint8Array(16+12+r.byteLength);return a.set(t.iv,0),a.set(new Uint8Array(await crypto.subtle.encrypt(t,n,r)),t.iv.byteLength),a}async function v(e,r){const t={name:"AES-GCM",tagLength:128,iv:r.subarray(0,12)},n=await f(e);return new Uint8Array(await crypto.subtle.decrypt(t,n,r.subarray(12)))}async function S(e,r){const t={name:"ECDSA",namedCurve:i},n={name:"ECDSA",hash:{name:d}},a=await crypto.subtle.importKey("pkcs8",e,t,!1,["sign"]);return new Uint8Array(await crypto.subtle.sign(n,a,r))}async function C(e,r,t){const n={name:"ECDSA",namedCurve:i},a={name:"ECDSA",hash:{name:d}},s=await crypto.subtle.importKey("spki",r,n,!1,["verify"]);return await crypto.subtle.verify(a,s,e,t)}export{w as cryptoRandom};export{y as cryptoHash};export{K as cryptoGenerateKey};export{A as cryptoEncrypt};export{v as cryptoDecrypt};export{S as cryptoSign};export{C as cryptoVerify};function l(e){return Math.floor((e??new Date).getTime()/1e3)}function U(e){return new Date(e*1e3)}function k(e){const[r,t,n,a,s,c]=e.split(/[/ :TZ_.-]/i).map(o=>Number(o));return l(new Date(r,(t??1)-1,n??1,a??0,s??0,c??0))}export{l as dateEncode};export{U as dateDecode};export{k as dateParse};async function m(e,r){return new Uint8Array(await new Response(new Blob([e]).stream().pipeThrough(r)).arrayBuffer())}async function L(e){return await m(e,new CompressionStream("deflate-raw"))}async function H(e){return await m(e,new DecompressionStream("deflate-raw"))}export{L as deflateEncode};export{H as deflateDecode};async function B(e,r,t){const{origin:n,pathname:a}=/^http(s|):\/\//i.test(e)?new URL(e):new URL(e,location.href),s=new URLSearchParams(t?.query).toString(),c=await fetch(`${n}${a}${s&&"?"}${s}`,{method:t?.method??"GET",credentials:t?.credentials??"omit",mode:t?.mode??"cors",cache:t?.cache??"no-cache",redirect:t?.redirect??"follow",keepalive:t?.keepalive??!1,referrerPolicy:t?.referrerPolicy??"no-referrer",referrer:t?.referrer??"",integrity:t?.integrity??"",signal:t?.signal??null,headers:t?.headers??{},body:t?.body??null,window:null});switch(r){case"text":return await c.text();case"json":return await c.json();case"form":return await c.formData();case"byte":return new Uint8Array(await c.arrayBuffer());case"buffer":return await c.arrayBuffer();case"blob":return await c.blob();case"ok":return c.ok;case"code":return c.status;case"header":return c.headers;case"response":return c;default:throw new Error}}export{B as fetchExtend};function u(e){return new TextEncoder().encode(e)}function b(e){return new TextDecoder().decode(e)}function p(e){return[...e].map(r=>r.toString(16).toUpperCase().padStart(2,"0")).join("")}function P(e){return e.trim().replace(/\r/g,"").replace(/\t/g," ").replace(/ +/g," ").replace(/ +$/mg,"")}export{u as ucEncode};export{b as ucDecode};export{p as hexEncode};export{P as trimExtend};const h=32,g=1,x=4;async function R(e){const r=new Uint8Array(e.reduce((n,[a,s])=>n+32+1+4+u(a).byteLength+s.byteLength,0));let t=0;for(const[n,a]of e){const s=u(n),c=a;r.set(await y(!1,c),t),t+=h,new DataView(r.buffer,t).setUint8(0,s.byteLength),t+=g,new DataView(r.buffer,t).setUint32(0,c.byteLength),t+=x,r.set(s,t),t+=s.byteLength,r.set(c,t),t+=c.byteLength}return r}async function V(e){const r=[];let t=0;for(;t<e.byteLength;){const n=e.subarray(t,t+=h),a=new DataView(e.buffer,t).getUint8(0);t+=g;const s=new DataView(e.buffer,t).getUint32(0);t+=x;const c=b(e.subarray(t,t+=a)),o=e.subarray(t,t+=s);if(p(n)!==p(await y(!1,o)))throw new Error;r.push([c,o])}return r}export{R as minipackEncode};export{V as minipackDecode};