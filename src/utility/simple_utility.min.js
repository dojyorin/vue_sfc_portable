// Build: "deno bundle https://deno.land/x/simple_utility@v0.0.4/mod.compatible.ts | esbuild --minify | head -c -1"
function h(e){return btoa([...e].map(r=>String.fromCharCode(r)).join(""))}function b(e){return new Uint8Array([...atob(e)].map(r=>r.charCodeAt(0)))}export{h as base64Encode};export{b as base64Decode};function f(e){return Math.floor((e??new Date).getTime()/1e3)}function m(e){return new Date(e*1e3)}function p(e){const[r,t,o,c,a,n]=e.split(/[/ :TZ_.-]/i).map(i=>Number(i));return f(new Date(r,(t??1)-1,o??1,c??0,a??0,n??0))}export{f as dateEncode};export{m as dateDecode};export{p as dateParse};async function w(e,r){return new Uint8Array(await new Response(new Blob([e]).stream().pipeThrough(r)).arrayBuffer())}async function y(e){return new Uint8Array(await crypto.subtle.digest("SHA-256",e))}async function g(e){return await w(e,new CompressionStream("deflate-raw"))}async function x(e){return await w(e,new DecompressionStream("deflate-raw"))}export{g as deflateEncode};export{x as deflateDecode};async function D(e,r,t){const{origin:o,pathname:c}=/^http(s|):\/\//i.test(e)?new URL(e):new URL(e,location.href),a=new URLSearchParams(t?.query).toString(),n=await fetch(`${o}${c}${a&&"?"}${a}`,{method:t?.method??"GET",credentials:t?.credentials??"omit",mode:t?.mode??"cors",cache:t?.cache??"no-cache",redirect:t?.redirect??"follow",keepalive:t?.keepalive??!1,referrerPolicy:t?.referrerPolicy??"no-referrer",referrer:t?.referrer??"",integrity:t?.integrity??"",signal:t?.signal??null,headers:t?.headers??{},body:t?.body??null,window:null});switch(r){case"text":return await n.text();case"json":return await n.json();case"form":return await n.formData();case"byte":return new Uint8Array(await n.arrayBuffer());case"buffer":return await n.arrayBuffer();case"blob":return await n.blob();case"ok":return n.ok;case"code":return n.status;case"header":return n.headers;case"response":return n;default:throw new Error}}export{D as fetchExtend};function d(e){return new TextEncoder().encode(e)}function l(e){return new TextDecoder().decode(e)}function u(e){return[...e].map(r=>r.toString(16).toUpperCase().padStart(2,"0")).join("")}function E(e){return e.trim().replace(/\r/g,"").replace(/\t/g," ").replace(/ +/g," ").replace(/ +$/mg,"")}export{d as ucEncode};export{l as ucDecode};export{u as hexEncode};export{E as trimExtend};const s={hash:32,name:1,body:4},U=Object.values(s).reduce((e,r)=>e+r,0);async function L(e){const r=new Uint8Array(e.reduce((o,[c,a])=>o+U+d(c).byteLength+a.byteLength,0));let t=0;for(const[o,c]of e){const a=d(o),n=c;r.set(await y(n),t),t+=s.hash,new DataView(r.buffer,t).setUint8(0,a.byteLength),t+=s.name,new DataView(r.buffer,t).setUint32(0,n.byteLength),t+=s.body,r.set(a,t),t+=a.byteLength,r.set(n,t),t+=n.byteLength}return r}async function k(e){const r=[];let t=0;for(;t<e.byteLength;){const o=e.subarray(t,t+=s.hash),c=new DataView(e.buffer,t).getUint8(0);t+=s.name;const a=new DataView(e.buffer,t).getUint32(0);t+=s.body;const n=l(e.subarray(t,t+=c)),i=e.subarray(t,t+=a);if(u(o)!==u(await y(i)))throw new Error;r.push([n,i])}return r}export{L as minipackEncode};export{k as minipackDecode};