// https://github.com/dojyorin/deno_simple_utility/releases/latest/download/mod.universal.min.js
function D(e){return btoa([...e].map(r=>String.fromCharCode(r)).join(""))}function K(e){return new Uint8Array([...atob(e)].map(r=>r.charCodeAt(0)))}export{D as base64Encode};export{K as base64Decode};function f(e,r){return{name:"AES-GCM",tagLength:e*8,iv:r}}function i(e){return{name:e?"ECDH":"ECDSA",namedCurve:"P-521"}}function d(){return{name:"ECDSA",hash:{name:"SHA-512"}}}async function w(e){const r=i(!0),t=await crypto.subtle.importKey("spki",e.publicKey,r,!1,[]),n=await crypto.subtle.importKey("pkcs8",e.privateKey,r,!1,["deriveKey","deriveBits"]),a={name:"AES-GCM",length:256},o={name:"ECDH",public:t};return await crypto.subtle.deriveKey(o,n,a,!1,["encrypt","decrypt"])}function U(){return crypto.randomUUID()}function l(e){return crypto.getRandomValues(new Uint8Array(e))}async function u(e,r){const t=e?"SHA-512":"SHA-256";return new Uint8Array(await crypto.subtle.digest(t,r))}async function A(e){const r=e?["deriveKey","deriveBits"]:["sign","verify"],t=i(e),{publicKey:n,privateKey:a}=await crypto.subtle.generateKey(t,!0,r);return{publicKey:new Uint8Array(await crypto.subtle.exportKey("spki",n)),privateKey:new Uint8Array(await crypto.subtle.exportKey("pkcs8",a))}}async function v(e,r){const t=f(16,l(12)),n=await w(e),a=new Uint8Array(16+12+r.byteLength);return a.set(t.iv,0),a.set(new Uint8Array(await crypto.subtle.encrypt(t,n,r)),t.iv.byteLength),a}async function S(e,r){const t=f(16,r.subarray(0,12)),n=await w(e);return new Uint8Array(await crypto.subtle.decrypt(t,n,r.subarray(12)))}async function C(e,r){const t=i(!1),n=d(),a=await crypto.subtle.importKey("pkcs8",e,t,!1,["sign"]);return new Uint8Array(await crypto.subtle.sign(n,a,r))}async function k(e,r,t){const n=i(!1),a=d(),o=await crypto.subtle.importKey("spki",r,n,!1,["verify"]);return await crypto.subtle.verify(a,o,e,t)}export{U as cryptoUuid};export{l as cryptoRandom};export{u as cryptoHash};export{A as cryptoGenerateKey};export{v as cryptoEncrypt};export{S as cryptoDecrypt};export{C as cryptoSign};export{k as cryptoVerify};async function m(e,r){return new Uint8Array(await new Response(new Blob([e]).stream().pipeThrough(r)).arrayBuffer())}async function L(e){return await m(e,new CompressionStream("deflate-raw"))}async function B(e){return await m(e,new DecompressionStream("deflate-raw"))}export{L as deflateEncode};export{B as deflateDecode};async function H(e,r,t){const{origin:n,pathname:a}=/^http(s|):\/\//i.test(e)?new URL(e):new URL(e,location.href),o=new URLSearchParams(t?.query).toString(),c=await fetch(`${n}${a}${o&&"?"}${o}`,{method:t?.method??"GET",credentials:t?.credentials??"omit",mode:t?.mode??"cors",cache:t?.cache??"no-cache",redirect:t?.redirect??"follow",keepalive:t?.keepalive??!1,referrerPolicy:t?.referrerPolicy??"no-referrer",referrer:t?.referrer??"",integrity:t?.integrity??"",signal:t?.signal??null,headers:t?.headers??{},body:t?.body??null,window:null});switch(r){case"text":return await c.text();case"json":return await c.json();case"form":return await c.formData();case"byte":return new Uint8Array(await c.arrayBuffer());case"buffer":return await c.arrayBuffer();case"blob":return await c.blob();case"ok":return c.ok;case"code":return c.status;case"header":return c.headers;case"response":return c;default:throw new Error}}export{H as fetchExtend};function y(e){return new TextEncoder().encode(e)}function b(e){return new TextDecoder().decode(e)}function p(e){return[...e].map(r=>r.toString(16).toUpperCase().padStart(2,"0")).join("")}function R(e){return e.trim().replace(/\r/g,"").replace(/\t/g," ").replace(/ +/g," ").replace(/ +$/mg,"")}export{y as utfEncode};export{b as utfDecode};export{p as hexEncode};export{R as trimExtend};const g=32,h=1,x=4;async function V(e){const r=new Uint8Array(e.reduce((n,[a,o])=>n+32+1+4+y(a).byteLength+o.byteLength,0));let t=0;for(const[n,a]of e){const o=y(n),c=a;r.set(await u(!1,c),t),t+=g,new DataView(r.buffer,t).setUint8(0,o.byteLength),t+=h,new DataView(r.buffer,t).setUint32(0,c.byteLength),t+=x,r.set(o,t),t+=o.byteLength,r.set(c,t),t+=c.byteLength}return r}async function G(e){const r=[];let t=0;for(;t<e.byteLength;){const n=e.subarray(t,t+=g),a=new DataView(e.buffer,t).getUint8(0);t+=h;const o=new DataView(e.buffer,t).getUint32(0);t+=x;const c=b(e.subarray(t,t+=a)),s=e.subarray(t,t+=o);if(p(n)!==p(await u(!1,s)))throw new Error;r.push([c,s])}return r}export{V as minipackEncode};export{G as minipackDecode};function E(e){return Math.floor((e??new Date).getTime()/1e3)}function P(e){return new Date(e*1e3)}function T(e){const[r,t,n,a,o,c]=e.split(/[/ :TZ_.-]/i).map(s=>Number(s));return E(new Date(r,(t??1)-1,n??1,a??0,o??0,c??0))}export{E as unixtimeEncode};export{P as unixtimeDecode};export{T as unixtimeParse};